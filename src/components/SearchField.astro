---
import { join } from "node:path";
interface Props { readonly id?: string; readonly className?: string; } const { id, className } = Astro.props as Props;
const bundlePath = join(import.meta.env.BASE_URL, "pagefind/");
const divProps = { ...(id ? { id } : {}), ...(className ? { class: className } : {}), };
---

<link href="/pagefind/pagefind-ui.css" rel="stylesheet">
<script src="/pagefind/pagefind-ui.js" is:inline></script>

<div {...divProps} data-pagefind-ui="true" data-bundle-path={bundlePath}></div>
<script is:inline>
  if (typeof window !== "undefined") {
    // import { PagefindUI } from "@pagefind/default-ui";
    window.addEventListener("DOMContentLoaded", () => {
      const allSelector = "[data-pagefind-ui]";
      for (const el of document.querySelectorAll(allSelector)) {
        const elSelector = [
          ...(el.id ? [`#${el.id}`] : []),
          ...[...el.classList.values()].map((c) => `.${c}`),
          allSelector,
        ].join("");
        const bundlePath = el.getAttribute("data-bundle-path");
        new PagefindUI({
          element: elSelector,
          translations: {
            placeholder: "Haku",
            search_label: "Hae sivustolta",
            clear_search: "Tyhjennä",
            load_more: "Lataa lisää",
            zero_results: "Ei tuloksia haulle '[SEARCH_TERM]'",
            one_result: "[COUNT] tulos haulle '[SEARCH_TERM]'",
            many_results: "[COUNT] tulosta haulle '[SEARCH_TERM]'",
          },
          bundlePath,
          showImages: false,
          debounceTimeoutMs: 100,
        });

        const input = el.querySelector<HTMLInputElement>(`input[type="text"]`);
        input?.focus();
      }
    });
  }
</script>
